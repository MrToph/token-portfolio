{"version":3,"sources":["shared/eos/dfuse.ts","modules/root/logic.ts","shared/local-storage.ts","modules/root/store/token.ts","modules/user/store/index.ts","modules/root/store/index.ts","shared/hooks.ts","modules/user/components/NavBar.tsx","modules/root/theme.tsx","modules/root/components/TransfersFilter.tsx","modules/root/components/TransfersTable.tsx","modules/root/components/TransfersChart.tsx","shared/assets/github.svg","modules/root/components/App.tsx","index.tsx"],"names":["DFUSE_API_KEY","localStorage","getItem","apiKey","prompt","setItem","client","createDfuseClient","network","getTablesByScopes","code","table","scopes","block_num","a","stateTablesForScopes","blockNum","response","getActionTraces","tx","isMatchingTrace","matchingTraces","Array","traces","lifecycle","execution_trace","action_traces","length","curTrace","shift","push","isArray","inline_traces","map","trace","blockNumber","timestamp","Date","block_time","account","act","name","data","print","console","trxId","trx_id","globalSequence","Number","parseInt","String","receipt","global_sequence","receiveSequence","recv_sequence","actDigest","act_digest","defaultSearchOptions","toBlock","undefined","limit","searchTransactions","searchQuery","actionTraceMatcher","options","cursor","Promise","race","res","rej","setTimeout","Error","sort","startBlock","message","details","errors","JSON","stringify","error","newTransactions","transactions","newActions","forEach","trans","actions","getColorForBucket","isPositive","bucket","computeLocalStorageKey","key","process","getLocalStorage","parseAsJson","val","parse","setLocalStorage","jsonStringify","EOS_SYMBOL","precision","TokenStore","rootStore","shouldCancelFetching","cancelFetching","this","minBalanceFilter","userStore","accountName","_getAccount","amount","symbol","balance","precisionAdjustment","Math","pow","floor","parseFloat","runningAmount","result","sortedAction","transferActions","a1","a2","groupedActions","groupBy","action","Object","entries","index","sumAmount","BigNumber","biggestParty","biggestPartyAmount","isIncoming","to","decomposeAsset","quantity","plus","minus","abs","isGreaterThan","from","isGreaterThanOrEqualTo","minBalance","deltaQuantity","impact","party","values","compareFnFactory","shouldAscend","d1","d2","negativeSortedData","filter","positiveSortedData","d","concat","computeHistogram","trx","toNumber","groupedTransfers","x","y","dataPoints","groupedTransfersDataPoints","end","start","diff","getTime","NUM_TICKS","_","min","max","observable","array","computed","_fetchCurrentBalance","lastIrreversibleBlockNum","replace","isFetching","_fetchTransactions","_checkAccount","receiver","searchString","last_irreversible_block_num","accountsRows","tables","rows","balanceAmount","json","AccountStore","userName","onNewAccount","tokenStore","UserStore","fetchTokenInfo","init","initialized","storeContext","React","createContext","useStore","storeSelector","value","useContext","observer","useForm","handleSubmit","register","useState","setIsSubmitting","Flex","w","h","justifyContent","alignItems","maxW","Box","textTransform","letterSpacing","fontSize","fontWeight","onSubmit","handleUserNameSubmit","FormControl","isInvalid","Boolean","InputGroup","Input","placeholder","maxLength","autoFocus","focusBorderColor","ref","validate","isName","defaultValue","IconButton","variantColor","aria-label","icon","type","customTheme","theme","colors","brand","900","800","700","maxWidth","styled","flexDir","mb","Heading","as","handleMinBalanceFilterSubmit","children","test","ListItemBox","MyListItem","otherProps","isNegative","List","py","px","backgroundColor","toLocaleString","color","formatAsset","Link","display","lineHeight","href","formatBlockExplorerTransaction","isExternal","Code","slice","Icon","ml","marginX","marginY","size","position","Spinner","bottom","right","spacing","props","useTheme","zoomDomain","selectedDomain","state","setState","chartWidth","sizes","height","marginTop","marginBottom","width","scale","VictoryTheme","material","domain","padding","left","top","domainPadding","style","stroke","teal","labels","fill","datum","labelComponent","crossAxis","tickLabels","gray","axis","grid","dependentAxis","containerComponent","responsive","brushStyle","fillOpacity","brushDomain","onBrushDomainChange","tickValues","groupedTransfersDates","tickFormat","toLocaleDateString","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","className","_ref","svgRef","title","viewBox","border","transform","transformOrigin","ForwardRef","forwardRef","StoreProvider","Provider","useEffect","ThemeProvider","ColorModeProvider","CSSReset","src","alt","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6b54941.chunk.js","sourcesContent":["import {\n  createDfuseClient,\n  SearchTransactionRow,\n  ActionTrace,\n  DfuseClient,\n} from \"@dfuse/client\";\nimport { TEosAction } from \"@deltalabs/eos-utils\";\nimport { TActionTraceMatcher, TActionInfo } from \"types/dfuse\";\n\nexport interface SingleTableScopeResult<T> {\n  last_irreversible_block_id: string;\n  last_irreversible_block_num: number;\n  rows: TableScopeRowResult<T>[];\n}\n\nexport interface TableScopesResult<T> {\n  last_irreversible_block_id: string;\n  last_irreversible_block_num: number;\n  tables: TableScopeResult<T>[];\n}\n\nexport interface TableScopeResult<T> {\n  account: string;\n  scope: string;\n  rows: TableScopeRowResult<T>[];\n}\n\nexport interface TableScopeRowResult<T> {\n  key: string;\n  payer: string;\n  json: T;\n}\n\nexport interface TableScopes {\n  block_num: number;\n  scopes: string[];\n}\n\nlet DFUSE_API_KEY = localStorage.getItem(`DFUSE_API_KEY`);\n\nif (!DFUSE_API_KEY) {\n  let apiKey = ``;\n  do {\n    apiKey = prompt(`Must provide a dfuse.io API key`, `Title`) || ``;\n  } while (!apiKey);\n  localStorage.setItem(`DFUSE_API_KEY`, apiKey);\n  DFUSE_API_KEY = apiKey;\n}\n\nconst client = createDfuseClient({\n  apiKey: DFUSE_API_KEY,\n  network: `mainnet`,\n});\n\nexport async function getTableScopes(\n  code: string,\n  table: string,\n  block_num: number\n) {\n  try {\n    const response = await client.stateTableScopes(code, table, {\n      blockNum: block_num,\n    });\n    return (response as unknown) as TableScopes;\n  } catch (e) {\n    throw e;\n  }\n}\n\nexport async function getTablesByScopes<T>(\n  code: string,\n  table: string,\n  scopes: string[],\n  block_num?: number\n): Promise<TableScopesResult<T>> {\n  try {\n    const response = await client.stateTablesForScopes<T>(code, scopes, table, {\n      blockNum: block_num,\n    });\n    return (response as unknown) as TableScopesResult<T>;\n  } catch (e) {\n    throw e;\n  }\n}\n\nconst getActionTraces = (\n  tx: SearchTransactionRow,\n  isMatchingTrace: TActionTraceMatcher\n): TActionInfo[] => {\n  const matchingTraces = new Array<ActionTrace<any>>();\n\n  // BFS through transaction traces\n  const traces = tx.lifecycle.execution_trace!.action_traces;\n  while (traces.length > 0) {\n    const curTrace = traces.shift()!;\n\n    if (isMatchingTrace(curTrace)) {\n      matchingTraces.push(curTrace);\n    }\n\n    if (Array.isArray(curTrace.inline_traces)) {\n      traces.push(...curTrace.inline_traces);\n    }\n  }\n\n  return matchingTraces.map((trace) => {\n    return {\n      blockNumber: trace.block_num,\n      timestamp: new Date(`${trace.block_time}Z`),\n      account: trace.act.account,\n      name: trace.act.name,\n      data: trace.act.data,\n      print: trace.console,\n      trxId: trace.trx_id,\n      // https://github.com/EOSIO/eos/blob/master/libraries/chain/apply_context.cpp#L127\n      // global_sequence unique per non-failed transactions\n      globalSequence: Number.parseInt(\n        String(trace.receipt.global_sequence),\n        10\n      ),\n      // recv_sequence unique per contract, is a counter incremeted each time account is a receiver\n      receiveSequence: Number.parseInt(String(trace.receipt.recv_sequence), 10),\n      // not necessarily unique as it just hashes the action data?\n      actDigest: trace.receipt.act_digest,\n    };\n  });\n};\n\ntype DfuseSearchTransactionOptions = {\n  toBlock?: number;\n  limit: number;\n};\nconst defaultSearchOptions: DfuseSearchTransactionOptions = {\n  toBlock: undefined,\n  limit: 100,\n};\nexport async function* searchTransactions(\n  searchQuery: string,\n  actionTraceMatcher: TActionTraceMatcher,\n  options: DfuseSearchTransactionOptions = defaultSearchOptions\n): AsyncIterableIterator<ReturnType<typeof getActionTraces>> {\n  options = { ...defaultSearchOptions, ...options };\n  let response: any;\n  let cursor = ``;\n\n  do {\n    try {\n      // sometimes dfuse searchTransaction gets stuck on mainnet and takes ages or never returns\n      response = await Promise.race([\n        new Promise((res, rej) => {\n          setTimeout(() => {\n            rej(new Error(`searchTransactions took too long.`));\n          }, 20 * 1e3);\n        }),\n        client.searchTransactions(searchQuery, {\n          limit: options.limit,\n          sort: `desc`,\n          cursor,\n          startBlock: options.toBlock,\n        }),\n      ]);\n    } catch (error) {\n      let message = error.message;\n      if (error.details && error.details.errors)\n        message = `${message}. ${JSON.stringify(error.details.errors)}`;\n\n      console.error(`dfuse: ${message}`);\n      // try again\n      continue;\n    }\n\n    cursor = response.cursor;\n\n    const newTransactions = response.transactions;\n    if (newTransactions && newTransactions[0]) {\n      const newActions = [] as ReturnType<typeof getActionTraces>;\n      newTransactions.forEach((trans) => {\n        const actions = getActionTraces(trans, actionTraceMatcher);\n        newActions.push(...actions);\n      });\n      yield newActions;\n    }\n  } while (cursor !== ``);\n}\n\nexport const dfuseClient = client;\n","const NUM_BUCKETS = 5\nexport const computeHistogram = (data: {index: number, val: number}[]) => {\n  const compareFnFactory = (shouldAscend = true) => {\n    if(shouldAscend) return (d1, d2) => d1.val - d2.val\n    else return (d1, d2) => d2.val - d1.val\n  }\n  const negativeSortedData = data.filter(({ val }) => val < 0).sort(compareFnFactory(false))\n  const positiveSortedData = data.filter(({ val }) => val >= 0).sort(compareFnFactory(true))\n\n  // fill buckts equally\n  negativeSortedData.forEach((d, index) => {\n    (d as any).bucket = Math.floor((index / negativeSortedData.length) * NUM_BUCKETS)\n  })\n  positiveSortedData.forEach((d, index) => {\n    (d as any).bucket = Math.floor((index / positiveSortedData.length) * NUM_BUCKETS)\n  })\n\n  return negativeSortedData.concat(positiveSortedData) as {index: number, val: number, bucket: number}[]\n}\n\nexport const getColorForBucket = (isPositive: boolean, bucket:number) => {\n  const SHADES_OF_GREEN = [100, 200, 300, 400, 500]\n  const SHADES_OF_RED = [100, 200, 300, 400, 500]\n  if(isPositive) return `green.${[SHADES_OF_GREEN[bucket]]}`\n  else return `red.${[SHADES_OF_RED[bucket]]}`\n}","const LS_PREFIX = process.env.REACT_APP_NAME;\n\nconst computeLocalStorageKey = (key: string) => `${LS_PREFIX}-${key}`;\n\nexport const getLocalStorage = (key: string, parseAsJson = true) => {\n  const val = localStorage.getItem(computeLocalStorageKey(key));\n  if (!val) return undefined;\n\n  if (!parseAsJson) return val;\n\n  try {\n    return JSON.parse(val);\n  } catch {\n    return val;\n  }\n};\n\nexport const setLocalStorage = (\n  key: string,\n  val: any,\n  jsonStringify = true\n) => {\n  return localStorage.setItem(\n    computeLocalStorageKey(key),\n    jsonStringify ? JSON.stringify(val) : val\n  );\n};\n","import { decomposeAsset, formatAsset, TAsset } from \"@deltalabs/eos-utils\";\nimport BigNumber from \"bignumber.js\";\nimport { action, observable, computed } from \"mobx\";\nimport RootStore from \"modules/root/store\";\nimport { getTablesByScopes, searchTransactions } from \"shared/eos/dfuse\";\nimport { TAccountsRow } from \"types/tables\";\nimport groupBy from \"lodash/groupBy\";\nimport { TActionTraceMatcher, TActionInfo } from \"types/dfuse\";\nimport { computeHistogram } from \"../logic\";\nimport { setLocalStorage, getLocalStorage } from \"shared/local-storage\";\n\nconst EOS_SYMBOL = {\n  precision: 4,\n  code: `EOS`\n};\ntype TTransferData = {\n  from: string;\n  to: string;\n  quantity: string;\n  memo: string;\n};\nexport type TGroupedTransfer = {\n  trxId: string;\n  blockNumber: number;\n  timestamp: Date;\n  deltaQuantity: TAsset;\n  balance: TAsset;\n  party: string; // other trading party\n  impact: number; // value between [0, NUM_BUCKETS - 1] indicating the relative importance of deltaQuantity\n};\ntype TGroupedTransfers = {\n  [key: string]: TGroupedTransfer;\n};\nexport default class TokenStore {\n  rootStore: RootStore;\n  @observable balance?: TAsset = undefined;\n  @observable minBalanceFilter: string;\n  @observable public isFetching = false;\n  private shouldCancelFetching = false;\n  @observable private transferActions = observable.array<\n    TActionInfo<TTransferData>\n  >([]);\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n    this.minBalanceFilter = getLocalStorage(`minBalanceFilter`) || `0.01`;\n  }\n\n  @action handleMinBalanceFilterSubmit = (minBalanceFilter: string) => {\n    this.minBalanceFilter = minBalanceFilter;\n    setLocalStorage(`minBalanceFilter`, minBalanceFilter);\n  };\n\n  @computed private get minBalance() {\n    let amount = 0;\n    const symbol = this.balance!.symbol;\n    if (this.minBalanceFilter) {\n      const precisionAdjustment = Math.pow(10, symbol.precision);\n      amount = Math.floor(\n        Number.parseFloat(this.minBalanceFilter) * precisionAdjustment\n      );\n    }\n    return { amount, symbol };\n  }\n\n  public cancelFetching = async () => {\n    this.shouldCancelFetching = true\n  };\n\n  @action public fetchTokenInfo = async () => {\n    const {\n      balance,\n      lastIrreversibleBlockNum: blockNum\n    } = await this._fetchCurrentBalance();\n    this.balance = balance;\n    this.transferActions.replace([]);\n\n    try {\n      this.shouldCancelFetching = false;\n      this.isFetching = true;\n      await this._fetchTransactions(blockNum);\n    } catch(error) {\n      console.error(error.message)\n    } finally {\n      this.isFetching = false;\n    }\n  };\n\n  @action private _fetchTransactions = async toBlock => {\n    const accountName = this._checkAccount();\n    const actionTraceMatcher: TActionTraceMatcher = trace => {\n      if (trace.receipt.receiver !== accountName) return false;\n\n      return (\n        trace.act.account === `eosio.token` &&\n        trace.act.name === `transfer` &&\n        (trace.act.data.from === accountName ||\n          trace.act.data.to === accountName)\n      );\n    };\n\n    const searchString = `receiver:${accountName} account:eosio.token action:transfer`\n\n    for await (const traces of searchTransactions(searchString, actionTraceMatcher, { toBlock, limit: 20 })) {\n      // stop fetching transfers for other account if we changed it\n      if (this.shouldCancelFetching) break;\n      this.transferActions.push(...traces);\n    }\n  };\n\n  @action private _fetchCurrentBalance = async () => {\n    this.balance = undefined;\n    const accountName = this._checkAccount();\n\n    const result = await getTablesByScopes<TAccountsRow>(\n      `eosio.token`,\n      `accounts`,\n      [accountName]\n    );\n    const lastIrreversibleBlockNum = result.last_irreversible_block_num;\n    const accountsRows = result.tables[0].rows;\n    let balanceAmount = new BigNumber(`0`);\n    if (accountsRows[0]) {\n      balanceAmount = decomposeAsset(accountsRows[0].json.balance).amount;\n    }\n    return {\n      balance: { amount: balanceAmount, symbol: EOS_SYMBOL },\n      lastIrreversibleBlockNum\n    };\n  };\n\n  private _getAccount(): string {\n    return this.rootStore.userStore.accountName;\n  }\n\n  private _checkAccount(): string {\n    const accountName = this._getAccount();\n    if (!accountName) throw new Error(`Must enter an account name first`);\n    return accountName;\n  }\n\n  @computed public get groupedTransfers(): TGroupedTransfers {\n    const accountName = this._getAccount();\n    if (!accountName || !this.balance) return {};\n\n    let runningAmount = this.balance.amount;\n    const symbol = this.balance.symbol;\n\n    const result: TGroupedTransfers = {};\n    const sortedAction = this.transferActions.sort(\n      (a1, a2) => a2.blockNumber - a1.blockNumber\n    );\n    const groupedActions = groupBy(sortedAction, action => action.trxId);\n    Object.entries(groupedActions).forEach(([trxId, actions], index) => {\n      let sumAmount = new BigNumber(`0`);\n      let biggestParty = ``;\n      let biggestPartyAmount = new BigNumber(`0`);\n      actions.forEach(action => {\n        const isIncoming = action.data.to === accountName;\n        const amount = decomposeAsset(action.data.quantity).amount;\n        sumAmount = isIncoming\n          ? sumAmount.plus(amount)\n          : sumAmount.minus(amount);\n        if (amount.abs().isGreaterThan(biggestPartyAmount)) {\n          biggestPartyAmount = amount.abs();\n          biggestParty = isIncoming ? action.data.from : action.data.to;\n        }\n      });\n\n      // filter results by minBalance\n      // always show latest transfer such that the correct current balance is displayed\n      const isLatestTransfer = index === 0;\n      if (\n        isLatestTransfer ||\n        sumAmount.abs().isGreaterThanOrEqualTo(this.minBalance.amount)\n      ) {\n        const [action] = actions;\n        result[trxId] = {\n          trxId: action.trxId,\n          blockNumber: action.blockNumber,\n          timestamp: action.timestamp,\n          deltaQuantity: { amount: sumAmount, symbol },\n          balance: { amount: runningAmount, symbol },\n          impact: 0,\n          party: biggestParty\n        };\n      }\n      runningAmount = runningAmount.minus(sumAmount);\n\n    });\n\n    const transactions = Object.values(result);\n    const histogram = computeHistogram(\n      transactions.map((trx, index) => ({\n        index,\n        val: trx.deltaQuantity.amount.toNumber()\n      }))\n    );\n\n    histogram.forEach(d => {\n      transactions[d.index].impact = d.bucket;\n    });\n\n    return result;\n  }\n\n  @computed public get groupedTransfersDataPoints() {\n    if (!this.balance) return [];\n\n    const precisionAdjustment = Math.pow(10, this.balance!.symbol.precision);\n    return Object.values(this.groupedTransfers).map(trx => ({\n      x: trx.timestamp,\n      y: trx.balance.amount.toNumber() / precisionAdjustment\n    }));\n  }\n\n  @computed public get groupedTransfersDates() {\n    const NUM_TICKS = 6;\n    const dataPoints = this.groupedTransfersDataPoints;\n    if (dataPoints.length < 2) return [];\n    const end = dataPoints[0].x;\n    const start = dataPoints[dataPoints.length - 1].x;\n    const diff = end.getTime() - start.getTime();\n\n    return Array.from(\n      { length: NUM_TICKS + 1 },\n      (_, index) =>\n        new Date(start.getTime() + Math.floor(index * (diff / NUM_TICKS)))\n    );\n  }\n\n  @computed public get chartRange() {\n    const values = this.groupedTransfersDataPoints.map(({ y }) => y);\n    return [Math.min(...values) * 0.5, Math.max(...values) * 1.05];\n  }\n}\n","import { action, computed, observable } from \"mobx\";\nimport RootStore from \"modules/root/store\";\nimport { getLocalStorage, setLocalStorage } from \"shared/local-storage\";\n\nexport default class AccountStore {\n  rootStore: RootStore;\n  @observable public accountName = ``;\n  @observable public networkName = `mainnet`;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @action handleUserNameSubmit = (userName: string) => {\n    this.accountName = userName;\n    setLocalStorage(`accountName`, userName);\n    this.rootStore.onNewAccount()\n  };\n\n  @action init = async () => {\n    this.accountName = getLocalStorage(`accountName`) || ``;\n    if(this.accountName) {\n      this.rootStore.onNewAccount()\n    }\n  };\n}\n","import React from 'react';\nimport { observable } from \"mobx\";\nimport TokenStore from './token';\nimport UserStore from 'modules/user/store';\n\nexport default class RootStore {\n    @observable initialized = false;\n    tokenStore = new TokenStore(this);\n    userStore = new UserStore(this);\n\n    async init() {\n        // wait until user store is initialized before initializing other stores\n        await this.userStore.init();\n        this.initialized = true;\n    }\n\n    public onNewAccount = async () => {\n        try {\n            await this.tokenStore.fetchTokenInfo()\n        } catch (error) {\n            console.error(`Error fetching token info:`, error.message)\n        }\n    }\n}\n\nexport const rootStore = new RootStore();\nexport const storeContext = React.createContext<RootStore>(rootStore);\n","import { useContext, useEffect } from 'react';\nimport RootStore, { storeContext } from 'modules/root/store';\n\nexport const useStore = <Store>(storeSelector: (rootStore: RootStore) => Store) => {\n    const value = useContext(storeContext);\n    if (!value) {\n        throw new Error(`storeContext does not have any value`);\n    }\n    const store = storeSelector(value);\n    return store;\n};\n\nexport const useOnClickOutside = (ref, handler) => {\n    useEffect(() => {\n        const listener = event => {\n            // Do nothing if clicking ref's element or descendent elements\n            if (!ref.current || ref.current.contains(event.target)) {\n                return;\n            }\n\n            handler(event);\n        };\n\n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n\n        return () => {\n            document.removeEventListener('mousedown', listener);\n            document.removeEventListener('touchstart', listener);\n        };\n    }, [ref, handler]);\n};\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { isName } from \"@deltalabs/eos-utils/dist/name\";\nimport {\n  Box,\n  Flex,\n  IconButton,\n  Input,\n  InputGroup,\n  InputRightElement,\n  FormControl,\n} from \"@chakra-ui/core\";\nimport { useStore } from \"shared/hooks\";\nimport { observer } from \"mobx-react\";\n\nconst NavBar: React.FC = () => {\n  const [userStore, tokenStore] = useStore(rootStore => [rootStore.userStore, rootStore.tokenStore]);\n\n  const { handleSubmit, errors, register } = useForm();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const onSubmit = values => {\n    setIsSubmitting(true);\n    if(tokenStore.isFetching) {\n      tokenStore.cancelFetching()\n    } else {\n      userStore.handleUserNameSubmit(values.name)\n    }\n    setIsSubmitting(false);\n  };\n\n  const validateName = value => {\n    return isName(value) ? true : `Not a valid EOSIO account name`;\n  };\n\n  return (\n    <Flex w=\"100%\" h=\"16\" justifyContent=\"center\" alignItems=\"center\">\n      <Flex\n        w=\"100%\"\n        maxW=\"4xl\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Box\n          textTransform=\"uppercase\"\n          letterSpacing=\"tight\"\n          fontSize=\"xl\"\n          fontWeight=\"bold\"\n        >\n          Token Portfolio\n        </Box>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <FormControl isInvalid={Boolean(errors.name)}>\n            <InputGroup>\n              <Input\n                name=\"name\"\n                placeholder=\"account\"\n                w=\"64\"\n                maxLength={13}\n                autoFocus\n                focusBorderColor=\"teal.200\"\n                ref={register({ validate: validateName })}\n                defaultValue={userStore.accountName}\n              />\n              <InputRightElement>\n                <IconButton\n                  variantColor=\"teal\"\n                  aria-label=\"Search\"\n                  fontSize=\"20px\"\n                  icon={tokenStore.isFetching ? `close` : `search`}\n                  type=\"submit\"\n                />\n              </InputRightElement>\n            </InputGroup>\n          </FormControl>\n        </form>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default observer(NavBar);\n","import { theme } from \"@chakra-ui/core\";\n\n// Let's say you want to add custom colors\nconst customTheme = {\n  ...theme,\n  colors: {\n    ...theme.colors,\n    brand: {\n      900: \"#1a365d\",\n      800: \"#153e75\",\n      700: \"#2a69ac\",\n    },\n  },\n  maxWidth: 1280,\n};\n\nexport default customTheme","import { observer } from \"mobx-react\";\nimport React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useStore } from \"shared/hooks\";\nimport {\n  formatAsset,\n  formatBlockExplorerTransaction\n} from \"@deltalabs/eos-utils\";\nimport {\n  Box,\n  Flex,\n  IconButton,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Stack,\n  FormControl,\n  InputLeftAddon,\n  Heading\n} from \"@chakra-ui/core\";\nimport { TGroupedTransfer } from \"modules/root/store/token\";\nimport { getColorForBucket } from \"../logic\";\nimport { useForm } from \"react-hook-form\";\n\nconst ListItemBox = styled(Box)`\n  display: inline-block;\n  text-align: center;\n`;\n\nconst TransfersFilter: React.FC = () => {\n  const [userStore, tokenStore] = useStore(rootStore => [\n    rootStore.userStore,\n    rootStore.tokenStore\n  ]);\n\n  const { handleSubmit, errors, register } = useForm();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const onSubmit = values => {\n    setIsSubmitting(true);\n\n    tokenStore.handleMinBalanceFilterSubmit(values.minBalanceFilter);\n    setIsSubmitting(false);\n  };\n\n  const validateNumber = value => {\n    return /^\\d*(\\.\\d+){0,1}$/.test(value);\n  };\n\n  return (\n    <Flex flexDir=\"column\" alignItems=\"center\" w=\"100%\" mb=\"8\">\n      <Heading as=\"h4\" fontSize=\"lg\" mb=\"1\">\n        Filters\n      </Heading>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormControl isInvalid={Boolean(errors.minBalanceFilter)}>\n          <InputGroup>\n            <InputLeftAddon children=\"Min Balance\" />\n            <Input\n              name=\"minBalanceFilter\"\n              placeholder=\"0.01\"\n              w=\"64\"\n              focusBorderColor=\"teal.200\"\n              ref={register({ validate: validateNumber })}\n              defaultValue={tokenStore.minBalanceFilter}\n            />\n            <InputRightElement>\n              <IconButton\n                variantColor=\"teal\"\n                aria-label=\"Apply Filter\"\n                fontSize=\"20px\"\n                icon=\"check\"\n                type=\"submit\"\n              />\n            </InputRightElement>\n          </InputGroup>\n        </FormControl>\n      </form>\n    </Flex>\n  );\n};\n\nexport default observer(TransfersFilter);\n","import { observer } from \"mobx-react\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useStore } from \"shared/hooks\";\nimport {\n  formatAsset,\n  formatBlockExplorerTransaction\n} from \"@deltalabs/eos-utils\";\nimport {\n  List,\n  ListItem,\n  ListIcon,\n  Flex,\n  Heading,\n  Box,\n  Link,\n  Icon,\n  Code,\n  Spinner\n} from \"@chakra-ui/core\";\nimport { TGroupedTransfer } from \"modules/root/store/token\";\nimport { getColorForBucket } from \"../logic\";\nimport TransfersFilter from \"./TransfersFilter\";\n\nconst ListItemBox = styled(Box)`\n  display: inline-block;\n  text-align: center;\n`;\n\n// const ListItemHeaderBox = styled(ListItemBox)`\n//   text-transform: uppercase;\n//   font-size: 16px;\n// `;\n\nconst MyListItem: React.FC<{ trx: TGroupedTransfer }> = ({\n  trx,\n  ...otherProps\n}) => {\n  const isPositive = !trx.deltaQuantity.amount.isNegative();\n  return (\n    <ListItem py=\"4\" px=\"6\" backgroundColor=\"gray.700\" {...otherProps}>\n      <ListItemBox w=\"48\">{trx.timestamp.toLocaleString()}</ListItemBox>\n      <ListItemBox w=\"32\">{trx.party}</ListItemBox>\n      <ListItemBox w=\"32\" color={getColorForBucket(isPositive, trx.impact)}>\n        {formatAsset(trx.deltaQuantity)}\n      </ListItemBox>\n      <ListItemBox w=\"48\" fontWeight={700}>\n        {formatAsset(trx.balance)}\n      </ListItemBox>\n      <ListItemBox w=\"32\">\n        <Link\n          display=\"flex\"\n          flexDir=\"row\"\n          alignItems=\"center\"\n          lineHeight=\"1.5em\"\n          href={formatBlockExplorerTransaction(`eosq`)(trx.trxId)}\n          isExternal\n        >\n          <Code backgroundColor=\"transparent\">\n            {trx.trxId.slice(0, 4)}..{trx.trxId.slice(-4)}\n          </Code>\n          <Icon name=\"external-link\" ml=\"1\" />\n        </Link>\n      </ListItemBox>\n    </ListItem>\n  );\n};\n\nconst TransfersTable: React.FC = () => {\n  const [tokenStore] = useStore(rootStore => [\n    rootStore.tokenStore\n  ]);\n\n  return (\n    <Flex\n      flexDir=\"column\"\n      alignItems=\"center\"\n      maxW=\"100%\"\n      w=\"6xl\"\n      marginX=\"auto\"\n      marginY=\"12\"\n    >\n      <Heading as=\"h2\" size=\"xl\" mb=\"4\" position=\"relative\">\n        <span>Your Transfers</span>\n        {tokenStore.isFetching && <Spinner bottom={2} right=\"-4\" ml=\"2\" position=\"absolute\" />}\n      </Heading>\n      <TransfersFilter />\n      <List spacing={1} fontSize=\"sm\">\n      <ListItem py=\"4\" px=\"6\" textTransform=\"uppercase\">\n      <ListItemBox w=\"48\">Time</ListItemBox>\n      <ListItemBox w=\"32\">Party</ListItemBox>\n      <ListItemBox w=\"32\">\n        Δ Balance\n      </ListItemBox>\n      <ListItemBox w=\"48\">\n        Balance\n      </ListItemBox>\n      <ListItemBox w=\"32\">\n        Transaction\n      </ListItemBox>\n    </ListItem>\n        {Object.values(tokenStore.groupedTransfers).map(trx => (\n          <MyListItem key={trx.trxId} trx={trx} />\n        ))}\n      </List>\n    </Flex>\n  );\n};\n\nexport default observer(TransfersTable);\n","import React, { useState } from \"react\";\nimport {\n  VictoryChart,\n  VictoryZoomContainer,\n  VictoryLine,\n  VictoryBrushContainer,\n  VictoryAxis,\n  VictoryTheme,\n  VictoryLabel,\n  VictoryTooltip\n} from \"victory\";\nimport { Flex, useTheme } from \"@chakra-ui/core\";\nimport { useStore } from \"shared/hooks\";\nimport { observer } from \"mobx-react\";\n\ntype State = {\n  zoomDomain: any;\n  selectedDomain: any;\n};\ntype Props = {};\nconst TransfersChart: React.FC<{}> = props => {\n  const [tokenStore] = useStore(rootStore => [rootStore.tokenStore]);\n  const theme = useTheme();\n\n  const [state, setState] = useState<State>({\n    zoomDomain: undefined,\n    selectedDomain: undefined\n  });\n\n  const handleBrush = domain => {\n    setState({ ...state, zoomDomain: domain });\n  };\n\n  const chartWidth = Number.parseInt(theme.sizes[`6xl`]) * 16 /* 1rem */;\n  const chartHeight = 480;\n\n  return (\n    <Flex\n      flexDir=\"column\"\n      alignItems=\"center\"\n      maxW=\"100%\"\n      w=\"6xl\"\n      height={chartHeight}\n      marginX=\"auto\"\n      marginTop=\"12\"\n      marginBottom=\"48\"\n    >\n      <VictoryChart\n        width={chartWidth}\n        height={chartHeight}\n        scale={{ x: \"time\" }}\n        theme={VictoryTheme.material}\n        domain={state.zoomDomain}\n        padding={{ left: 100, right: 50, top: 50, bottom: 50 }}\n        domainPadding={{ x: [10, 10], y: [10, 60]}}\n      >\n        <VictoryLine\n          style={{\n            data: { stroke: theme.colors.teal[500] },\n            labels: {\n              fontSize: 15,\n              fill: theme.colors.teal[500]\n            }\n          }}\n          data={tokenStore.groupedTransfersDataPoints}\n          labels={({ datum }) => datum.y}\n          labelComponent={<VictoryLabel />}\n        />\n        <VictoryAxis\n          crossAxis\n          style={{\n            tickLabels: {\n              fill: theme.colors.gray[`500`],\n              stroke: theme.colors.gray[`500`],\n              fontSize: 16\n            },\n            axis: { stroke: theme.colors.gray[`700`] },\n            grid: { stroke: theme.colors.gray[`700`] }\n          }}\n        />\n        <VictoryAxis\n          crossAxis\n          dependentAxis\n          style={{\n            tickLabels: {\n              fill: theme.colors.teal[`500`],\n              stroke: theme.colors.teal[`500`],\n              fontSize: 16\n            },\n            axis: { stroke: theme.colors.gray[`700`] },\n            grid: { stroke: theme.colors.gray[`700`] }\n          }}\n        />\n      </VictoryChart>\n\n      <VictoryChart\n        padding={{ top: 0, left: 50, right: 50, bottom: 30 }}\n        width={600}\n        height={90}\n        scale={{ x: \"time\" }}\n        theme={VictoryTheme.material}\n        containerComponent={\n          <VictoryBrushContainer\n            responsive={false}\n            brushStyle={{\n              stroke: \"transparent\",\n              fill: theme.colors.teal[200],\n              fillOpacity: 0.2\n            }}\n            brushDomain={state.selectedDomain}\n            onBrushDomainChange={handleBrush}\n          />\n        }\n      >\n        <VictoryAxis\n          tickValues={tokenStore.groupedTransfersDates}\n          tickFormat={x => (x as Date).toLocaleDateString()}\n          style={{\n            tickLabels: {\n              fill: theme.colors.gray[`500`],\n              stroke: theme.colors.gray[`500`],\n            },\n          }}\n        />\n        <VictoryLine\n          style={{\n            data: { stroke: theme.colors.teal[500] }\n          }}\n          data={tokenStore.groupedTransfersDataPoints}\n        />\n      </VictoryChart>\n    </Flex>\n  );\n};\n\nexport default observer(TransfersChart);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\",\n  fill: \"currentColor\",\n  className: \"octo-body\"\n});\n\nvar SvgGithub = function SvgGithub(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 80,\n    height: 80,\n    viewBox: \"0 0 250 250\",\n    style: {\n      fill: \"#171923\",\n      color: \"#F7FAFC\",\n      position: \"absolute\",\n      top: 0,\n      border: 0,\n      left: 0,\n      transform: \"scale(-1, 1)\"\n    },\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, React.createElement(\"path\", {\n    d: \"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\",\n    fill: \"currentColor\",\n    style: {\n      transformOrigin: \"130px 106px\"\n    },\n    className: \"octo-arm\"\n  }), _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgGithub, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/github.e2ba83eb.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from \"react\";\nimport { useStore } from \"shared/hooks\";\nimport {\n  ThemeProvider,\n  CSSReset,\n  ColorModeProvider,\n  DarkMode,\n  Spinner,\n  Link,\n  Flex\n} from \"@chakra-ui/core\";\nimport { rootStore, storeContext } from \"../store\";\nimport NavBar from \"modules/user/components/NavBar\";\nimport customTheme from \"../theme\";\nimport TransfersTable from \"./TransfersTable\";\nimport TransfersChart from \"./TransfersChart\";\nimport { observer } from \"mobx-react\";\nimport { ReactComponent as GithubRibbon } from \"shared/assets/github.svg\";\n\nexport const StoreProvider = ({ children }) => {\n  return (\n    <storeContext.Provider value={rootStore}>{children}</storeContext.Provider>\n  );\n};\n\nconst App: React.FC = () => {\n  const rootStore = useStore(rootStore => rootStore);\n\n  useEffect(() => {\n    if (!rootStore) console.error(`Rootstore not initialized yet.`);\n    rootStore.init();\n  }, [rootStore]);\n\n  return (\n    <StoreProvider>\n      <ThemeProvider theme={customTheme}>\n        <ColorModeProvider>\n          <DarkMode>\n            <CSSReset />\n            {rootStore.initialized ? (\n              <>\n                <Link href=\"https://github.com/MrToph/token-portfolio\">\n                  <GithubRibbon />\n                </Link>\n                <NavBar />\n                <TransfersChart />\n                <TransfersTable />\n                <Flex justifyContent=\"center\">\n                  <a href=\"https://www.dfuse.io\" title=\"dfuse API for EOS\">\n                    <img\n                      src=\"https://www.dfuse.io/hubfs/powered-by-dfuse-02.png\"\n                      title=\"dfuse API for EOS\"\n                      width=\"210px\"\n                      height=\"auto\"\n                      alt=\"Powered by Dfuse\"\n                    />\n                  </a>\n                </Flex>\n              </>\n            ) : (\n              <Spinner />\n            )}\n          </DarkMode>\n        </ColorModeProvider>\n      </ThemeProvider>\n    </StoreProvider>\n  );\n};\n\nexport default observer(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'modules/root/components/App';\nimport customTheme from 'modules/root/theme';\n\nconsole.log(`%c${process.env.REACT_APP_NAME}@${process.env.REACT_APP_VERSION}`,  `color: ${customTheme.colors.teal[`200`]}; font-size: 12px;`)\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}