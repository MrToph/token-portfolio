{"version":3,"sources":["shared/eos/dfuse.ts","modules/root/logic.ts","shared/local-storage.ts","modules/root/store/token.ts","modules/user/store/index.ts","modules/root/store/index.ts","shared/hooks.ts","modules/user/components/NavBar.tsx","modules/root/theme.tsx","modules/root/components/TransfersFilter.tsx","modules/root/components/TransfersTable.tsx","modules/root/components/TransfersChart.tsx","shared/assets/github.svg","modules/root/components/App.tsx","index.tsx"],"names":["client","createDfuseClient","authentication","network","getTablesByScopes","code","table","scopes","block_num","a","stateTablesForScopes","blockNum","response","dfuseClient","getColorForBucket","isPositive","bucket","computeLocalStorageKey","key","process","getLocalStorage","parseAsJson","val","localStorage","getItem","JSON","parse","setLocalStorage","jsonStringify","setItem","stringify","EOS_SYMBOL","precision","TokenStore","rootStore","shouldCancelFetching","cancelFetching","this","minBalanceFilter","userStore","accountName","_getAccount","Error","amount","symbol","balance","precisionAdjustment","Math","pow","floor","Number","parseFloat","runningAmount","result","sortedAction","transferActions","sort","a1","a2","blockNumber","groupedActions","groupBy","action","txId","Object","entries","forEach","index","trxId","actions","sumAmount","BigNumber","biggestParty","biggestPartyAmount","isIncoming","data","to","decomposeAsset","quantity","plus","minus","abs","isGreaterThan","from","isGreaterThanOrEqualTo","minBalance","timestamp","deltaQuantity","impact","party","transactions","values","compareFnFactory","shouldAscend","d1","d2","negativeSortedData","filter","positiveSortedData","d","length","concat","computeHistogram","map","trx","toNumber","groupedTransfers","x","y","dataPoints","groupedTransfersDataPoints","end","start","diff","getTime","Array","NUM_TICKS","_","Date","min","max","observable","array","computed","_fetchCurrentBalance","lastIrreversibleBlockNum","replace","isFetching","_fetchTransactions","console","error","message","toBlock","_checkAccount","searcher","DfuseSearcher","actionTraceMatcher","trace","searchString","searchTransactions","limit","backward","traces","push","undefined","last_irreversible_block_num","accountsRows","tables","rows","balanceAmount","json","AccountStore","userName","onNewAccount","tokenStore","UserStore","fetchTokenInfo","init","initialized","storeContext","React","createContext","useStore","storeSelector","value","useContext","observer","useForm","handleSubmit","errors","register","useState","setIsSubmitting","Flex","w","h","justifyContent","alignItems","maxW","Box","textTransform","letterSpacing","fontSize","fontWeight","onSubmit","handleUserNameSubmit","name","FormControl","isInvalid","Boolean","InputGroup","Input","placeholder","maxLength","autoFocus","focusBorderColor","ref","validate","isName","defaultValue","IconButton","variantColor","aria-label","icon","type","customTheme","theme","colors","brand","900","800","700","maxWidth","styled","flexDir","mb","Heading","as","handleMinBalanceFilterSubmit","children","test","ListItemBox","MyListItem","otherProps","isNegative","List","py","px","backgroundColor","toLocaleString","color","formatAsset","Link","display","lineHeight","href","formatBlockExplorerTransaction","isExternal","Code","slice","Icon","ml","log","marginX","marginY","size","position","Spinner","bottom","right","spacing","props","useTheme","zoomDomain","selectedDomain","state","setState","chartWidth","parseInt","sizes","height","marginTop","marginBottom","width","scale","VictoryTheme","material","domain","padding","left","top","domainPadding","style","stroke","teal","labels","fill","datum","labelComponent","crossAxis","tickLabels","gray","axis","grid","dependentAxis","containerComponent","responsive","brushStyle","fillOpacity","brushDomain","onBrushDomainChange","tickValues","groupedTransfersDates","tickFormat","toLocaleDateString","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","className","_ref","svgRef","title","viewBox","border","transform","transformOrigin","ForwardRef","forwardRef","StoreProvider","Provider","useEffect","ThemeProvider","ColorModeProvider","CSSReset","src","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.534d39c4.chunk.js","sourcesContent":["import {\n  createDfuseClient\n} from \"@dfuse/client\";\n\nexport interface SingleTableScopeResult<T> {\n  last_irreversible_block_id: string;\n  last_irreversible_block_num: number;\n  rows: TableScopeRowResult<T>[];\n}\n\nexport interface TableScopesResult<T> {\n  last_irreversible_block_id: string;\n  last_irreversible_block_num: number;\n  tables: TableScopeResult<T>[];\n}\n\nexport interface TableScopeResult<T> {\n  account: string;\n  scope: string;\n  rows: TableScopeRowResult<T>[];\n}\n\nexport interface TableScopeRowResult<T> {\n  key: string;\n  payer: string;\n  json: T;\n}\n\nexport interface TableScopes {\n  block_num: number;\n  scopes: string[];\n}\n\nconst client = createDfuseClient({\n  authentication: false,\n  network: `eos.dfuse.eosnation.io`,\n});\n\nexport async function getTableScopes(\n  code: string,\n  table: string,\n  block_num: number\n) {\n  try {\n    const response = await client.stateTableScopes(code, table, {\n      blockNum: block_num,\n    });\n    return (response as unknown) as TableScopes;\n  } catch (e) {\n    throw e;\n  }\n}\n\nexport async function getTablesByScopes<T>(\n  code: string,\n  table: string,\n  scopes: string[],\n  block_num?: number\n): Promise<TableScopesResult<T>> {\n  try {\n    const response = await client.stateTablesForScopes<T>(code, scopes, table, {\n      blockNum: block_num,\n    });\n    return (response as unknown) as TableScopesResult<T>;\n  } catch (e) {\n    throw e;\n  }\n}\n\n\nexport const dfuseClient = client;\n","const NUM_BUCKETS = 5\nexport const computeHistogram = (data: {index: number, val: number}[]) => {\n  const compareFnFactory = (shouldAscend = true) => {\n    if(shouldAscend) return (d1, d2) => d1.val - d2.val\n    else return (d1, d2) => d2.val - d1.val\n  }\n  const negativeSortedData = data.filter(({ val }) => val < 0).sort(compareFnFactory(false))\n  const positiveSortedData = data.filter(({ val }) => val >= 0).sort(compareFnFactory(true))\n\n  // fill buckts equally\n  negativeSortedData.forEach((d, index) => {\n    (d as any).bucket = Math.floor((index / negativeSortedData.length) * NUM_BUCKETS)\n  })\n  positiveSortedData.forEach((d, index) => {\n    (d as any).bucket = Math.floor((index / positiveSortedData.length) * NUM_BUCKETS)\n  })\n\n  return negativeSortedData.concat(positiveSortedData) as {index: number, val: number, bucket: number}[]\n}\n\nexport const getColorForBucket = (isPositive: boolean, bucket:number) => {\n  const SHADES_OF_GREEN = [100, 200, 300, 400, 500]\n  const SHADES_OF_RED = [100, 200, 300, 400, 500]\n  if(isPositive) return `green.${[SHADES_OF_GREEN[bucket]]}`\n  else return `red.${[SHADES_OF_RED[bucket]]}`\n}","const LS_PREFIX = process.env.REACT_APP_NAME;\n\nconst computeLocalStorageKey = (key: string) => `${LS_PREFIX}-${key}`;\n\nexport const getLocalStorage = (key: string, parseAsJson = true) => {\n  const val = localStorage.getItem(computeLocalStorageKey(key));\n  if (!val) return undefined;\n\n  if (!parseAsJson) return val;\n\n  try {\n    return JSON.parse(val);\n  } catch {\n    return val;\n  }\n};\n\nexport const setLocalStorage = (\n  key: string,\n  val: any,\n  jsonStringify = true\n) => {\n  return localStorage.setItem(\n    computeLocalStorageKey(key),\n    jsonStringify ? JSON.stringify(val) : val\n  );\n};\n","import {\n  decomposeAsset,\n  DfuseSearcher,\n  formatAsset,\n  TActionInfo,\n  TAsset,\n} from \"@deltalabs/eos-utils\";\nimport BigNumber from \"bignumber.js\";\nimport { action, observable, computed } from \"mobx\";\nimport RootStore from \"modules/root/store\";\nimport { dfuseClient, getTablesByScopes } from \"shared/eos/dfuse\";\nimport { TAccountsRow } from \"types/tables\";\nimport groupBy from \"lodash/groupBy\";\nimport { computeHistogram } from \"../logic\";\nimport { setLocalStorage, getLocalStorage } from \"shared/local-storage\";\n\nconst EOS_SYMBOL = {\n  precision: 4,\n  code: `EOS`,\n};\ntype TTransferData = {\n  from: string;\n  to: string;\n  quantity: string;\n  memo: string;\n};\nexport type TGroupedTransfer = {\n  trxId: string;\n  blockNumber: number;\n  timestamp: Date;\n  deltaQuantity: TAsset;\n  balance: TAsset;\n  party: string; // other trading party\n  impact: number; // value between [0, NUM_BUCKETS - 1] indicating the relative importance of deltaQuantity\n};\ntype TGroupedTransfers = {\n  [key: string]: TGroupedTransfer;\n};\nexport default class TokenStore {\n  rootStore: RootStore;\n  @observable balance?: TAsset = undefined;\n  @observable minBalanceFilter: string;\n  @observable public isFetching = false;\n  private shouldCancelFetching = false;\n  @observable private transferActions = observable.array<\n    TActionInfo<TTransferData>\n  >([]);\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n    this.minBalanceFilter = getLocalStorage(`minBalanceFilter`) || `0.01`;\n  }\n\n  @action handleMinBalanceFilterSubmit = (minBalanceFilter: string) => {\n    this.minBalanceFilter = minBalanceFilter;\n    setLocalStorage(`minBalanceFilter`, minBalanceFilter);\n  };\n\n  @computed private get minBalance() {\n    let amount = 0;\n    const symbol = this.balance!.symbol;\n    if (this.minBalanceFilter) {\n      const precisionAdjustment = Math.pow(10, symbol.precision);\n      amount = Math.floor(\n        Number.parseFloat(this.minBalanceFilter) * precisionAdjustment\n      );\n    }\n    return { amount, symbol };\n  }\n\n  public cancelFetching = async () => {\n    this.shouldCancelFetching = true;\n  };\n\n  @action public fetchTokenInfo = async () => {\n    const {\n      balance,\n      lastIrreversibleBlockNum: blockNum,\n    } = await this._fetchCurrentBalance();\n    this.balance = balance;\n    this.transferActions.replace([]);\n\n    try {\n      this.shouldCancelFetching = false;\n      this.isFetching = true;\n      await this._fetchTransactions(blockNum);\n    } catch (error) {\n      console.error(error.message);\n    } finally {\n      this.isFetching = false;\n    }\n  };\n\n  @action private _fetchTransactions = async (toBlock) => {\n    const accountName = this._checkAccount();\n\n    const searcher = new DfuseSearcher({ client: dfuseClient });\n\n    const actionTraceMatcher: Parameters<\n      typeof searcher[\"searchTransactions\"]\n    >[1] = (trace) => {\n      return true;\n    };\n    const searchString = `receiver:${accountName} account:eosio.token action:transfer`;\n\n    for await (const traces of searcher.searchTransactions<any>(\n      searchString,\n      actionTraceMatcher,\n      {\n        limit: 100,\n        backward: true,\n      }\n    )) {\n      // stop fetching transfers for other account if we changed it\n      if (this.shouldCancelFetching) break;\n      this.transferActions.push(...traces);\n    }\n  };\n\n  @action private _fetchCurrentBalance = async () => {\n    this.balance = undefined;\n    const accountName = this._checkAccount();\n\n    const result = await getTablesByScopes<TAccountsRow>(\n      `eosio.token`,\n      `accounts`,\n      [accountName]\n    );\n    const lastIrreversibleBlockNum = result.last_irreversible_block_num;\n    const accountsRows = result.tables[0].rows;\n    let balanceAmount = new BigNumber(`0`);\n    if (accountsRows[0]) {\n      balanceAmount = decomposeAsset(accountsRows[0].json.balance).amount;\n    }\n    return {\n      balance: { amount: balanceAmount, symbol: EOS_SYMBOL },\n      lastIrreversibleBlockNum,\n    };\n  };\n\n  private _getAccount(): string {\n    return this.rootStore.userStore.accountName;\n  }\n\n  private _checkAccount(): string {\n    const accountName = this._getAccount();\n    if (!accountName) throw new Error(`Must enter an account name first`);\n    return accountName;\n  }\n\n  @computed public get groupedTransfers(): TGroupedTransfers {\n    const accountName = this._getAccount();\n    if (!accountName || !this.balance) return {};\n\n    let runningAmount = this.balance.amount;\n    const symbol = this.balance.symbol;\n\n    const result: TGroupedTransfers = {};\n    const sortedAction = this.transferActions.sort(\n      (a1, a2) => a2.blockNumber - a1.blockNumber\n    );\n    const groupedActions = groupBy(sortedAction, (action) => action.txId);\n    Object.entries(groupedActions).forEach(([trxId, actions], index) => {\n      let sumAmount = new BigNumber(`0`);\n      let biggestParty = ``;\n      let biggestPartyAmount = new BigNumber(`0`);\n      actions.forEach((action) => {\n        const isIncoming = action.data.to === accountName;\n        const amount = decomposeAsset(action.data.quantity).amount;\n        sumAmount = isIncoming\n          ? sumAmount.plus(amount)\n          : sumAmount.minus(amount);\n        if (amount.abs().isGreaterThan(biggestPartyAmount)) {\n          biggestPartyAmount = amount.abs();\n          biggestParty = isIncoming ? action.data.from : action.data.to;\n        }\n      });\n\n      // filter results by minBalance\n      // always show latest transfer such that the correct current balance is displayed\n      const isLatestTransfer = index === 0;\n      if (\n        isLatestTransfer ||\n        sumAmount.abs().isGreaterThanOrEqualTo(this.minBalance.amount)\n      ) {\n        const [action] = actions;\n        result[trxId] = {\n          trxId: action.txId,\n          blockNumber: action.blockNumber,\n          timestamp: action.timestamp,\n          deltaQuantity: { amount: sumAmount, symbol },\n          balance: { amount: runningAmount, symbol },\n          impact: 0,\n          party: biggestParty,\n        };\n      }\n      runningAmount = runningAmount.minus(sumAmount);\n    });\n\n    const transactions = Object.values(result);\n    const histogram = computeHistogram(\n      transactions.map((trx, index) => ({\n        index,\n        val: trx.deltaQuantity.amount.toNumber(),\n      }))\n    );\n\n    histogram.forEach((d) => {\n      transactions[d.index].impact = d.bucket;\n    });\n\n    return result;\n  }\n\n  @computed public get groupedTransfersDataPoints() {\n    if (!this.balance) return [];\n\n    const precisionAdjustment = Math.pow(10, this.balance!.symbol.precision);\n    return Object.values(this.groupedTransfers).map((trx) => ({\n      x: trx.timestamp,\n      y: trx.balance.amount.toNumber() / precisionAdjustment,\n    }));\n  }\n\n  @computed public get groupedTransfersDates() {\n    const NUM_TICKS = 6;\n    const dataPoints = this.groupedTransfersDataPoints;\n    if (dataPoints.length < 2) return [];\n    const end = dataPoints[0].x;\n    const start = dataPoints[dataPoints.length - 1].x;\n    const diff = end.getTime() - start.getTime();\n\n    return Array.from(\n      { length: NUM_TICKS + 1 },\n      (_, index) =>\n        new Date(start.getTime() + Math.floor(index * (diff / NUM_TICKS)))\n    );\n  }\n\n  @computed public get chartRange() {\n    const values = this.groupedTransfersDataPoints.map(({ y }) => y);\n    return [Math.min(...values) * 0.5, Math.max(...values) * 1.05];\n  }\n}\n","import { action, computed, observable } from \"mobx\";\nimport RootStore from \"modules/root/store\";\nimport { getLocalStorage, setLocalStorage } from \"shared/local-storage\";\n\nexport default class AccountStore {\n  rootStore: RootStore;\n  @observable public accountName = ``;\n  @observable public networkName = `mainnet`;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  @action handleUserNameSubmit = (userName: string) => {\n    this.accountName = userName;\n    setLocalStorage(`accountName`, userName);\n    this.rootStore.onNewAccount()\n  };\n\n  @action init = async () => {\n    this.accountName = getLocalStorage(`accountName`) || ``;\n    if(this.accountName) {\n      this.rootStore.onNewAccount()\n    }\n  };\n}\n","import React from 'react';\nimport { observable } from \"mobx\";\nimport TokenStore from './token';\nimport UserStore from 'modules/user/store';\n\nexport default class RootStore {\n    @observable initialized = false;\n    tokenStore = new TokenStore(this);\n    userStore = new UserStore(this);\n\n    async init() {\n        // wait until user store is initialized before initializing other stores\n        await this.userStore.init();\n        this.initialized = true;\n    }\n\n    public onNewAccount = async () => {\n        try {\n            await this.tokenStore.fetchTokenInfo()\n        } catch (error) {\n            console.error(`Error fetching token info:`, error.message)\n        }\n    }\n}\n\nexport const rootStore = new RootStore();\nexport const storeContext = React.createContext<RootStore>(rootStore);\n","import { useContext, useEffect } from 'react';\nimport RootStore, { storeContext } from 'modules/root/store';\n\nexport const useStore = <Store>(storeSelector: (rootStore: RootStore) => Store) => {\n    const value = useContext(storeContext);\n    if (!value) {\n        throw new Error(`storeContext does not have any value`);\n    }\n    const store = storeSelector(value);\n    return store;\n};\n\nexport const useOnClickOutside = (ref, handler) => {\n    useEffect(() => {\n        const listener = event => {\n            // Do nothing if clicking ref's element or descendent elements\n            if (!ref.current || ref.current.contains(event.target)) {\n                return;\n            }\n\n            handler(event);\n        };\n\n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n\n        return () => {\n            document.removeEventListener('mousedown', listener);\n            document.removeEventListener('touchstart', listener);\n        };\n    }, [ref, handler]);\n};\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { isName } from \"@deltalabs/eos-utils/dist/name\";\nimport {\n  Box,\n  Flex,\n  IconButton,\n  Input,\n  InputGroup,\n  InputRightElement,\n  FormControl,\n} from \"@chakra-ui/core\";\nimport { useStore } from \"shared/hooks\";\nimport { observer } from \"mobx-react\";\n\nconst NavBar: React.FC = () => {\n  const [userStore, tokenStore] = useStore(rootStore => [rootStore.userStore, rootStore.tokenStore]);\n\n  const { handleSubmit, errors, register } = useForm();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const onSubmit = values => {\n    setIsSubmitting(true);\n    if(tokenStore.isFetching) {\n      tokenStore.cancelFetching()\n    } else {\n      userStore.handleUserNameSubmit(values.name)\n    }\n    setIsSubmitting(false);\n  };\n\n  const validateName = value => {\n    return isName(value) ? true : `Not a valid EOSIO account name`;\n  };\n\n  return (\n    <Flex w=\"100%\" h=\"16\" justifyContent=\"center\" alignItems=\"center\">\n      <Flex\n        w=\"100%\"\n        maxW=\"4xl\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Box\n          textTransform=\"uppercase\"\n          letterSpacing=\"tight\"\n          fontSize=\"xl\"\n          fontWeight=\"bold\"\n        >\n          Token Portfolio\n        </Box>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <FormControl isInvalid={Boolean(errors.name)}>\n            <InputGroup>\n              <Input\n                name=\"name\"\n                placeholder=\"account\"\n                w=\"64\"\n                maxLength={13}\n                autoFocus\n                focusBorderColor=\"teal.200\"\n                ref={register({ validate: validateName })}\n                defaultValue={userStore.accountName}\n              />\n              <InputRightElement>\n                <IconButton\n                  variantColor=\"teal\"\n                  aria-label=\"Search\"\n                  fontSize=\"20px\"\n                  icon={tokenStore.isFetching ? `close` : `search`}\n                  type=\"submit\"\n                />\n              </InputRightElement>\n            </InputGroup>\n          </FormControl>\n        </form>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default observer(NavBar);\n","import { theme } from \"@chakra-ui/core\";\n\n// Let's say you want to add custom colors\nconst customTheme = {\n  ...theme,\n  colors: {\n    ...theme.colors,\n    brand: {\n      900: \"#1a365d\",\n      800: \"#153e75\",\n      700: \"#2a69ac\",\n    },\n  },\n  maxWidth: 1280,\n};\n\nexport default customTheme","import {\n  Box,\n  Flex,\n  FormControl,\n  Heading,\n  IconButton,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  InputRightElement,\n} from \"@chakra-ui/core\";\nimport styled from \"@emotion/styled\";\nimport { observer } from \"mobx-react\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useStore } from \"shared/hooks\";\n\nconst ListItemBox = styled(Box)`\n  display: inline-block;\n  text-align: center;\n`;\n\nconst TransfersFilter: React.FC = () => {\n  const [userStore, tokenStore] = useStore((rootStore) => [\n    rootStore.userStore,\n    rootStore.tokenStore,\n  ]);\n\n  const { handleSubmit, errors, register } = useForm();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const onSubmit = (values) => {\n    setIsSubmitting(true);\n\n    tokenStore.handleMinBalanceFilterSubmit(values.minBalanceFilter);\n    setIsSubmitting(false);\n  };\n\n  const validateNumber = (value) => {\n    return /^\\d*(\\.\\d+){0,1}$/.test(value);\n  };\n\n  return (\n    <Flex flexDir=\"column\" alignItems=\"center\" w=\"100%\" mb=\"8\">\n      <Heading as=\"h4\" fontSize=\"lg\" mb=\"1\">\n        Filters\n      </Heading>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormControl isInvalid={Boolean(errors.minBalanceFilter)}>\n          <InputGroup>\n            <InputLeftAddon children=\"Min Balance\" />\n            <Input\n              name=\"minBalanceFilter\"\n              placeholder=\"0.01\"\n              w=\"64\"\n              focusBorderColor=\"teal.200\"\n              ref={register({ validate: validateNumber })}\n              defaultValue={tokenStore.minBalanceFilter}\n            />\n            <InputRightElement>\n              <IconButton\n                variantColor=\"teal\"\n                aria-label=\"Apply Filter\"\n                fontSize=\"20px\"\n                icon=\"check\"\n                type=\"submit\"\n              />\n            </InputRightElement>\n          </InputGroup>\n        </FormControl>\n      </form>\n    </Flex>\n  );\n};\n\nexport default observer(TransfersFilter);\n","import { observer } from \"mobx-react\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useStore } from \"shared/hooks\";\nimport {\n  formatAsset,\n  formatBlockExplorerTransaction\n} from \"@deltalabs/eos-utils\";\nimport {\n  List,\n  ListItem,\n  ListIcon,\n  Flex,\n  Heading,\n  Box,\n  Link,\n  Icon,\n  Code,\n  Spinner\n} from \"@chakra-ui/core\";\nimport { TGroupedTransfer } from \"modules/root/store/token\";\nimport { getColorForBucket } from \"../logic\";\nimport TransfersFilter from \"./TransfersFilter\";\n\nconst ListItemBox = styled(Box)`\n  display: inline-block;\n  text-align: center;\n`;\n\n// const ListItemHeaderBox = styled(ListItemBox)`\n//   text-transform: uppercase;\n//   font-size: 16px;\n// `;\n\nconst MyListItem: React.FC<{ trx: TGroupedTransfer }> = ({\n  trx,\n  ...otherProps\n}) => {\n  const isPositive = !trx.deltaQuantity.amount.isNegative();\n  return (\n    <ListItem py=\"4\" px=\"6\" backgroundColor=\"gray.700\" {...otherProps}>\n      <ListItemBox w=\"48\">{trx.timestamp.toLocaleString()}</ListItemBox>\n      <ListItemBox w=\"32\">{trx.party}</ListItemBox>\n      <ListItemBox w=\"32\" color={getColorForBucket(isPositive, trx.impact)}>\n        {formatAsset(trx.deltaQuantity)}\n      </ListItemBox>\n      <ListItemBox w=\"48\" fontWeight={700}>\n        {formatAsset(trx.balance)}\n      </ListItemBox>\n      <ListItemBox w=\"32\">\n        <Link\n          display=\"flex\"\n          flexDir=\"row\"\n          alignItems=\"center\"\n          lineHeight=\"1.5em\"\n          href={formatBlockExplorerTransaction(`eosq`)(trx.trxId)}\n          isExternal\n        >\n          <Code backgroundColor=\"transparent\">\n            {trx.trxId.slice(0, 4)}..{trx.trxId.slice(-4)}\n          </Code>\n          <Icon name=\"external-link\" ml=\"1\" />\n        </Link>\n      </ListItemBox>\n    </ListItem>\n  );\n};\n\nconst TransfersTable: React.FC = () => {\n  const [tokenStore] = useStore(rootStore => [\n    rootStore.tokenStore\n  ]);\n\n  console.log(`groupedTransfer`, tokenStore.groupedTransfers)\n\n  return (\n    <Flex\n      flexDir=\"column\"\n      alignItems=\"center\"\n      maxW=\"100%\"\n      w=\"6xl\"\n      marginX=\"auto\"\n      marginY=\"12\"\n    >\n      <Heading as=\"h2\" size=\"xl\" mb=\"4\" position=\"relative\">\n        <span>Your Transfers</span>\n        {tokenStore.isFetching && <Spinner bottom={2} right=\"-4\" ml=\"2\" position=\"absolute\" />}\n      </Heading>\n      <TransfersFilter />\n      <List spacing={1} fontSize=\"sm\">\n      <ListItem py=\"4\" px=\"6\" textTransform=\"uppercase\">\n      <ListItemBox w=\"48\">Time</ListItemBox>\n      <ListItemBox w=\"32\">Party</ListItemBox>\n      <ListItemBox w=\"32\">\n        Δ Balance\n      </ListItemBox>\n      <ListItemBox w=\"48\">\n        Balance\n      </ListItemBox>\n      <ListItemBox w=\"32\">\n        Transaction\n      </ListItemBox>\n    </ListItem>\n        {Object.values(tokenStore.groupedTransfers).map(trx => (\n          <MyListItem key={trx.trxId} trx={trx} />\n        ))}\n      </List>\n    </Flex>\n  );\n};\n\nexport default observer(TransfersTable);\n","import React, { useState } from \"react\";\nimport {\n  VictoryChart,\n  VictoryZoomContainer,\n  VictoryLine,\n  VictoryBrushContainer,\n  VictoryAxis,\n  VictoryTheme,\n  VictoryLabel,\n  VictoryTooltip\n} from \"victory\";\nimport { Flex, useTheme } from \"@chakra-ui/core\";\nimport { useStore } from \"shared/hooks\";\nimport { observer } from \"mobx-react\";\n\ntype State = {\n  zoomDomain: any;\n  selectedDomain: any;\n};\ntype Props = {};\nconst TransfersChart: React.FC<{}> = props => {\n  const [tokenStore] = useStore(rootStore => [rootStore.tokenStore]);\n  const theme = useTheme();\n\n  const [state, setState] = useState<State>({\n    zoomDomain: undefined,\n    selectedDomain: undefined\n  });\n\n  const handleBrush = domain => {\n    setState({ ...state, zoomDomain: domain });\n  };\n\n  const chartWidth = Number.parseInt(theme.sizes[`6xl`]) * 16 /* 1rem */;\n  const chartHeight = 480;\n\n  return (\n    <Flex\n      flexDir=\"column\"\n      alignItems=\"center\"\n      maxW=\"100%\"\n      w=\"6xl\"\n      height={chartHeight}\n      marginX=\"auto\"\n      marginTop=\"12\"\n      marginBottom=\"48\"\n    >\n      <VictoryChart\n        width={chartWidth}\n        height={chartHeight}\n        scale={{ x: \"time\" }}\n        theme={VictoryTheme.material}\n        domain={state.zoomDomain}\n        padding={{ left: 100, right: 50, top: 50, bottom: 50 }}\n        domainPadding={{ x: [10, 10], y: [10, 60]}}\n      >\n        <VictoryLine\n          style={{\n            data: { stroke: theme.colors.teal[500] },\n            labels: {\n              fontSize: 15,\n              fill: theme.colors.teal[500]\n            }\n          }}\n          data={tokenStore.groupedTransfersDataPoints}\n          labels={({ datum }) => datum.y}\n          labelComponent={<VictoryLabel />}\n        />\n        <VictoryAxis\n          crossAxis\n          style={{\n            tickLabels: {\n              fill: theme.colors.gray[`500`],\n              stroke: theme.colors.gray[`500`],\n              fontSize: 16\n            },\n            axis: { stroke: theme.colors.gray[`700`] },\n            grid: { stroke: theme.colors.gray[`700`] }\n          }}\n        />\n        <VictoryAxis\n          crossAxis\n          dependentAxis\n          style={{\n            tickLabels: {\n              fill: theme.colors.teal[`500`],\n              stroke: theme.colors.teal[`500`],\n              fontSize: 16\n            },\n            axis: { stroke: theme.colors.gray[`700`] },\n            grid: { stroke: theme.colors.gray[`700`] }\n          }}\n        />\n      </VictoryChart>\n\n      <VictoryChart\n        padding={{ top: 0, left: 50, right: 50, bottom: 30 }}\n        width={600}\n        height={90}\n        scale={{ x: \"time\" }}\n        theme={VictoryTheme.material}\n        containerComponent={\n          <VictoryBrushContainer\n            responsive={false}\n            brushStyle={{\n              stroke: \"transparent\",\n              fill: theme.colors.teal[200],\n              fillOpacity: 0.2\n            }}\n            brushDomain={state.selectedDomain}\n            onBrushDomainChange={handleBrush}\n          />\n        }\n      >\n        <VictoryAxis\n          tickValues={tokenStore.groupedTransfersDates}\n          tickFormat={x => (x as Date).toLocaleDateString()}\n          style={{\n            tickLabels: {\n              fill: theme.colors.gray[`500`],\n              stroke: theme.colors.gray[`500`],\n            },\n          }}\n        />\n        <VictoryLine\n          style={{\n            data: { stroke: theme.colors.teal[500] }\n          }}\n          data={tokenStore.groupedTransfersDataPoints}\n        />\n      </VictoryChart>\n    </Flex>\n  );\n};\n\nexport default observer(TransfersChart);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\",\n  fill: \"currentColor\",\n  className: \"octo-body\"\n});\n\nvar SvgGithub = function SvgGithub(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 80,\n    height: 80,\n    viewBox: \"0 0 250 250\",\n    style: {\n      fill: \"#171923\",\n      color: \"#F7FAFC\",\n      position: \"absolute\",\n      top: 0,\n      border: 0,\n      left: 0,\n      transform: \"scale(-1, 1)\"\n    },\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, React.createElement(\"path\", {\n    d: \"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\",\n    fill: \"currentColor\",\n    style: {\n      transformOrigin: \"130px 106px\"\n    },\n    className: \"octo-arm\"\n  }), _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgGithub, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/github.e2ba83eb.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from \"react\";\nimport { useStore } from \"shared/hooks\";\nimport {\n  ThemeProvider,\n  CSSReset,\n  ColorModeProvider,\n  DarkMode,\n  Spinner,\n  Link,\n  Flex\n} from \"@chakra-ui/core\";\nimport { rootStore, storeContext } from \"../store\";\nimport NavBar from \"modules/user/components/NavBar\";\nimport customTheme from \"../theme\";\nimport TransfersTable from \"./TransfersTable\";\nimport TransfersChart from \"./TransfersChart\";\nimport { observer } from \"mobx-react\";\nimport { ReactComponent as GithubRibbon } from \"shared/assets/github.svg\";\n\nexport const StoreProvider = ({ children }) => {\n  return (\n    <storeContext.Provider value={rootStore}>{children}</storeContext.Provider>\n  );\n};\n\nconst App: React.FC = () => {\n  const rootStore = useStore(rootStore => rootStore);\n\n  useEffect(() => {\n    if (!rootStore) console.error(`Rootstore not initialized yet.`);\n    rootStore.init();\n  }, [rootStore]);\n\n  return (\n    <StoreProvider>\n      <ThemeProvider theme={customTheme}>\n        <ColorModeProvider>\n          <DarkMode>\n            <CSSReset />\n            {rootStore.initialized ? (\n              <>\n                <Link href=\"https://github.com/MrToph/token-portfolio\">\n                  <GithubRibbon />\n                </Link>\n                <NavBar />\n                <TransfersChart />\n                <TransfersTable />\n                <Flex justifyContent=\"center\">\n                  <a href=\"https://www.dfuse.io\" title=\"dfuse API for EOS\">\n                    <img\n                      src=\"https://www.dfuse.io/hubfs/powered-by-dfuse-02.png\"\n                      title=\"dfuse API for EOS\"\n                      width=\"210px\"\n                      height=\"auto\"\n                      alt=\"Powered by Dfuse\"\n                    />\n                  </a>\n                </Flex>\n              </>\n            ) : (\n              <Spinner />\n            )}\n          </DarkMode>\n        </ColorModeProvider>\n      </ThemeProvider>\n    </StoreProvider>\n  );\n};\n\nexport default observer(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'modules/root/components/App';\nimport customTheme from 'modules/root/theme';\n\nconsole.log(`%c${process.env.REACT_APP_NAME}@${process.env.REACT_APP_VERSION}`,  `color: ${customTheme.colors.teal[`200`]}; font-size: 12px;`)\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}